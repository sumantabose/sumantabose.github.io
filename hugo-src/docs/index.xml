<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Sumanta Bose</title>
    <link>http://sumantabose.me/new-site/</link>
    <description>Recent content in Home on Sumanta Bose</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 10 Jun 2018 22:00:25 +0800</lastBuildDate>
    
	<atom:link href="http://sumantabose.me/new-site/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://sumantabose.me/new-site/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://sumantabose.me/new-site/about/</guid>
      <description>I am a Senior Research Engineer in the School of Computer Science and Engineering at Nanyang Technological University (NTU) Singapore. I work on full-stack distributed ledger technology system research, with specialization in blockchain. Currently, I’m developing our group’s in-house application agnostic blockchain platform. I also have working experience with Ethereum, Corda and Hyperledger platforms. Prior to this, I completed by PhD from the School of Electrical and Electronic Engineering at NTU Singapore.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>http://sumantabose.me/new-site/research/</link>
      <pubDate>Sun, 10 Jun 2018 22:00:25 +0800</pubDate>
      
      <guid>http://sumantabose.me/new-site/research/</guid>
      <description>Current Research My current work is on full-stack distributed ledger technology system research, with specialization in blockchain implementation and application.
Distributed Ledger Technology Distributed ledgers are managed by a peer-to-peer network collectively adhering to some consensus protocol. A blockchain is only one type of data structure considered to be a distributed ledger, that was originally designed to be open, permissionless and public for cryptocurrencies. However, over time several access controlled, permissioned and private alternatives have evolved for catering to large-scale multi-party transaction management applications undertaken by industries and corporations.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://sumantabose.me/new-site/contact/</link>
      <pubDate>Sun, 10 Jun 2018 22:00:25 +0800</pubDate>
      
      <guid>http://sumantabose.me/new-site/contact/</guid>
      <description>Sumanta Bose
Hardware &amp;amp; Embedded Systems Lab
N4-B2B-05, Blk N4, 50 Nanyang Avenue
Computer Science and Engineering
Nanyang Technological University
Singapore - 639798
Email: sumanta001@e.ntu.edu.sg
Phone: +65 98612535</description>
    </item>
    
    <item>
      <title>Building Robust Smart Contracts with OpenZeppelin</title>
      <link>http://sumantabose.me/new-site/blog/robust-smart-contracts-openzeppelin/</link>
      <pubDate>Thu, 14 Jun 2018 03:21:27 +0800</pubDate>
      
      <guid>http://sumantabose.me/new-site/blog/robust-smart-contracts-openzeppelin/</guid>
      <description>Source  http://truffleframework.com/tutorials/robust-smart-contracts-with-openzeppelin https://openzeppelin.org/ http://truffleframework.com/tutorials/  Overview This tutorial will cover:
 Unboxing the front-end application Creating the &amp;ldquo;TutorialToken&amp;rdquo; smart contract Compiling and deploying the smart contract Interacting with the new token  Steps  Install Truffle. sh $ npm install -g truffle  Install tutorialtoken truffle box in a directory tutorial-token. sh $ mkdir tutorial-token $ cd tutorial-token $ truffle unbox tutorialtoken  Next, we&amp;rsquo;ll install OpenZeppelin. The most recent version of OpenZeppelin can be found as an npm package.</description>
    </item>
    
    <item>
      <title>Truffle pet-shop installation and setup guide</title>
      <link>http://sumantabose.me/new-site/blog/truffle-pet-shop-guide/</link>
      <pubDate>Thu, 14 Jun 2018 03:20:27 +0800</pubDate>
      
      <guid>http://sumantabose.me/new-site/blog/truffle-pet-shop-guide/</guid>
      <description>Sources  http://truffleframework.com/boxes/pet-shop http://truffleframework.com/tutorials/pet-shop http://truffleframework.com/tutorials/  Steps to install and setup by cloning this repository  Install Truffle if you don&amp;rsquo;t already have it. sh $ npm install -g truffle  Clone this repository and access it&amp;rsquo;s root directory sh $ git clone https://github.com/sumantabose/pet-shop-ethereum-truffle.git $ cd pet-shop-ethereum-truffle  In the pet-shop-ethereum-truffle/ root directory truffle compile the smart contracts (see step 5 and 6 below). sh $ truffle compile  Download, install and run Ganache (step 7 below).</description>
    </item>
    
    <item>
      <title>Developing Ethereum Smart Contracts for Beginners</title>
      <link>http://sumantabose.me/new-site/blog/ethereum-smart-contract-beginners/</link>
      <pubDate>Thu, 14 Jun 2018 03:19:27 +0800</pubDate>
      
      <guid>http://sumantabose.me/new-site/blog/ethereum-smart-contract-beginners/</guid>
      <description>Learn how to code Ethereum smart contracts from scratch About the tutorial series
This tutorial series follows the content in this coursetro course. It will teach you to create and deploy ethereum smart contracts. Smart contracts allow you to create decentralized apps that can harness the power of the blockchain for a wide variety of use cases.
This course assumes you have no prior experience with creating smart contracts. You&amp;rsquo;re going to go from absolute beginner to an intermediate understanding in a very fast amount of time.</description>
    </item>
    
    <item>
      <title>Git-Playground</title>
      <link>http://sumantabose.me/new-site/blog/git-playground/</link>
      <pubDate>Thu, 14 Jun 2018 03:18:27 +0800</pubDate>
      
      <guid>http://sumantabose.me/new-site/blog/git-playground/</guid>
      <description>This is a playground to learn and practice git commands and implementation details. Here we will learn how Git works.
Setting config values $ git config --list (to check username &amp;amp; email in local repo) $ git config --local user.name &amp;#34;username&amp;#34; (local repo) $ git config --local user.email &amp;#34;useremail@domain.com&amp;#34; (local repo) $ git config --global user.name &amp;#34;username&amp;#34; (global systemwide) $ git config --global user.email &amp;#34;useremail@domain.com&amp;#34; (global systemwide) Setting credential values $ git config credential.</description>
    </item>
    
    <item>
      <title>Typography</title>
      <link>http://sumantabose.me/new-site/typography/</link>
      <pubDate>Thu, 28 Sep 2017 08:00:00 +0600</pubDate>
      
      <guid>http://sumantabose.me/new-site/typography/</guid>
      <description>Here is a paragraph. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
Heading 2 Another one. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
Heading 3 Yet another, but centered! Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
  </channel>
</rss>